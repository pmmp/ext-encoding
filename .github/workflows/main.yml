name: CI

on:
  push:
  pull_request:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-20.04
    if: "!contains(github.event.head_commit.message, '[ci skip]')"
    name: Tests (PHP ${{ matrix.php }}, OPcache ${{ matrix.opcache }}, Valgrind ${{ matrix.valgrind }}, JIT ${{ matrix.jit }})
    strategy:
      fail-fast: false
      matrix:
        php: [8.0.13, 8.1.0]
        opcache: [0, 1]
        valgrind: [0, 1]
        jit: [0, 1205]

    steps:
      - uses: actions/checkout@v2

      - name: Install Valgrind
        if: matrix.valgrind == '1'
        run: |
          sudo apt-get update && sudo apt-get install valgrind
          echo "TEST_PHP_ARGS=-m" >> $GITHUB_ENV
          echo "PHP_BUILD_CONFIGURE_OPTS=--with-valgrind" >> $GITHUB_ENV

      - name: Restore PHP build cache
        uses: actions/cache@v2
        id: php-build-cache
        with:
          path: ${{ github.workspace }}/php 
          key: php-debug-${{ matrix.php }}-valgrind-${{ matrix.valgrind }}
          
      - name: Clone php-build repository
        if: steps.php-build-cache.outputs.cache-hit != 'true'
        uses: actions/checkout@v2
        with:
          repository: php-build/php-build
          path: php-build

      - name: Compile PHP
        if: steps.php-build-cache.outputs.cache-hit != 'true'
        run: |
          cd $GITHUB_WORKSPACE/php-build
          ./install-dependencies.sh
          PHP_BUILD_ZTS_ENABLE=on PHP_BUILD_CONFIGURE_OPTS="$PHP_BUILD_CONFIGURE_OPTS --enable-debug" ./bin/php-build ${{ matrix.php }} $GITHUB_WORKSPACE/php

      - name: Compile extension
        run: |
          $GITHUB_WORKSPACE/php/bin/phpize
          ./configure --with-php-config=$GITHUB_WORKSPACE/php/bin/php-config
          make install

      - name: Generate php.ini
        run: |
          echo "extension=encoding.so" > $GITHUB_WORKSPACE/php.ini
          if [[ "${{ matrix.opcache }}" == "1" ]]; then
            echo "Enabling OPcache"
            echo "zend_extension=opcache.so" >> $GITHUB_WORKSPACE/php.ini
            echo "opcache.enable=1" >> $GITHUB_WORKSPACE/php.ini
            echo "opcache.enable_cli=1" >> $GITHUB_WORKSPACE/php.ini
            echo "opcache.jit=${{ matrix.jit }}" >> $GITHUB_WORKSPACE/php.ini
            echo "opcache.jit_buffer_size=128M" >> $GITHUB_WORKSPACE/php.ini
          else
            echo "OPcache is not enabled for this run"
          fi

      - name: Run PHPT tests
        run: |
          $GITHUB_WORKSPACE/php/bin/php ./run-tests.php $TEST_PHP_ARGS -P -q --show-diff --show-slow 30000 -n -c $GITHUB_WORKSPACE/php.ini

      - name: Upload test results
        if: failure()
        uses: actions/upload-artifact@v2
        with:
          name: test-results-${{ matrix.php }}-valgrind-${{ matrix.valgrind }}
          path: |
            ${{ github.workspace }}/tests/*
            !${{ github.workspace }}/tests/*.phpt
